openapi: 3.0.3
info:
  title: Yournal API
  description: Documentation and definition of the Yournal API
  version: 0.1.0
  contact:
    name: Patrick RÃ¶thlisberger
    email: hi@pat.dev
    url: https://pat.dev
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: '{protocol}://api.yournal.tk/v1'
    description: Main API endpoint
    variables:
      protocol:
        enum:
          - http
          - https
        default: https

paths:
  /users/login:
    post:
      summary: oAuth2 Authentification endpoint
      description: oAuth2 Authentication endpoint for registration or login
      tags:
        - User
      operationId: oAuth2
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/oAuthUserRequest"
        description: Credentials to use
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        "401":
          description: Unauthorized
        "422":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorSchema"
  /users:
    get:
      summary: Get current user
      description: Gets the currently logged-in user
      tags:
        - User
      security:
        - Token: []
      operationId: GetCurrentUser
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        "401":
          description: Unauthorized
        "422":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorSchema"
    put:
      summary: Update current user
      description: Updated user information for current user
      tags:
        - User
      security:
        - Token: []
      operationId: UpdateCurrentUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUserRequest"
        description: User details to update. At least **one** field is required.
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        "401":
          description: Unauthorized
        "422":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorSchema"

components:
  securitySchemes:
    Token:
      description: >+
        For accessing private API calls, you must be logged in an being in 
        pocession of an valid JWT token. 

        A JWT token is generated by the API by logging in via /users/login.


        The following format must be in the 'Authorization' header :

            Token: xxxxxx.yyyyyyy.zzzzzz

      type: apiKey
      name: Authorization
      in: header
  schemas:
    oAuthType:
      type: string
      enum: [Apple, Google, Microsoft]
      default: Google
    oAuthUser:
      type: object
      properties:
        code:
          type: string
        oAuthType:
          $ref: "#/components/schemas/oAuthType"
      required:
        - code
        - type
    oAuthUserRequest:
      type: object
      properties:
        user:
          $ref: "#/components/schemas/oAuthUser"
      required:
        - user
    User:
      type: object
      properties:
        email:
          type: string
          description: User email provided by oAuth Provider
        oAuthType:
          $ref: "#/components/schemas/oAuthType"
          description: oAuth type chosen by user
        oAuthID:
          type: string
          description: oAuth ID provided by oAuth Provider
        username:
          type: string
          description: User chosen username
        image:
          type: string
          description: User chosen profileimage
      required:
        - email
        - oAuthType
        - oAuthID
    UserResponse:
      type: object
      properties:
        user:
          $ref: "#/components/schemas/User"
      required:
        - user
    UpdateUser:
      type: object
      properties:
        username:
          type: string
        image:
          type: string
    UpdateUserRequest:
      type: object
      properties:
        user:
          $ref: "#/components/schemas/UpdateUser"
      required:
        - user
    GenericErrorSchema:
      type: object
      properties:
        errors:
          type: object
          properties:
            body:
              type: array
              items:
                type: string
          required:
            - body
      required:
        - errors

